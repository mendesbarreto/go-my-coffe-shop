syntax="proto3";

package api.v1.mycoffeshop.user;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "common.proto";

option go_package = "github.com/mendesbarreto/go-my-coffe-shop/proto/gen";

message SignInRequest {
  string email = 1 [(validate.rules).string.email = true];
  string password = 2;
}

message SignInResponse {
  string token = 1;
}

message SignUpRequest {
  string name = 1;
  string email = 2 [(validate.rules).string.email = true];
  string password = 3;
}

message SignUpResponse {
  string userId = 1;
  string token = 2;
}

message GetUserDetailsRequest {
  string userId = 1 [(validate.rules).string = { max_bytes: 12 }];
}

message GetUserDetailsResponse {
  string userId = 1;
  string name = 2;
  string email = 3;
}


message EmptyRequest {

}

message HelloRequest {

}

message HelloRespose {
  string text = 1;
}

service UserService {
 rpc HelloWorld(HelloRequest) returns (HelloRespose) {
    option (google.api.http) = {
      get: "/v1/user/hello"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get something"
      description: "Say Hello"
      tags: "Basic"
    };
  };

 rpc SignUp(SignUpRequest) returns (SignUpResponse) {
    option (google.api.http) = {
      post: "/v1/user/signup"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Sing Up"
      description: "Sing Up"
      tags: "Auth"
    };
 };
 rpc SignIn(SignInRequest) returns (SignInResponse) {
    option (google.api.http) = {
      post: "/v1/user/signin"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Sign in"
      description: "Sign in"
      tags: "Auth"
    };
  };

 rpc GetMe(EmptyRequest) returns (GetUserDetailsResponse) {
    option (google.api.http) = {
      get: "/v1/user/me"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get Me"
      description: "Get my user information details"
      tags: "Details"
    };
 };

 rpc GetUserDetails(GetUserDetailsRequest) returns (GetUserDetailsResponse) {
    option (google.api.http) = {
      get: "/v1/user/:id/details"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get user Details"
      description: "This method will return all the information needed about the user"
      tags: "Details"
    };
  };
}
